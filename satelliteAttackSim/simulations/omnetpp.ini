[General]
network = SatelliteNetwork
sim-time-limit = 100s
**.crcMode = "computed"
**.fcsMode = "computed"
*.wlan[*].mac.fcsMode = "FCS_COMPUTED"
# Attacker Mobility
*.attacker[*].mobility.typename = "StationaryMobility"
*.attacker*.mobility.initFromDisplayString = false
*.attacker[*].mobility.initialX = uniform(0m, 500m)  # Random starting X position
*.attacker[*].mobility.initialY = uniform(0m, 500m)  # Random starting Y position

# GroundStation mobility
*.groundStation.mobility.typename = "StationaryMobility"
*.groundStation.mobility.initFromDisplayString = false
*.groundStation.mobility.initialX = 250m   # Set a valid X coordinate
*.groundStation.mobility.initialY = 250m   # Set a valid Y coordinate
*.groundStation.mobility.initialZ = 0m 

# RadioMedium Configs
*.radioMedium.typename = "ApskScalarRadioMedium"
*.radioMedium.backgroundNoise.power = -90dBm

*.radioMedium.mediumLimitCache.centerFrequency = 2GHz

#*.radioMedium.macAddressFilter = true

**.ipv4.arp.typename = "GlobalArp"

######### Satellites Traffic ###############
*.satellite*.numApps = 1
*.satellite*.app[0].typename = "UdpBasicApp"
*.satellite*.app[0].destAddresses = "groundStation"
*.satellite*.app[0].destPort = 5000
*.satellite*.app[0].messageLength = 1000B
*.satellite*.app[0].sendInterval = exponential(700ms)
*.satellite*.app[0].packetName = "OSDLP-Packet"

#*.satellite*..radio.typename = "Ieee80211ScalarRadio"
#*.satellite*.wlan[0].radio.centerFrequency = 2GHz
#*.satellite*.wlan[0].radio.bandwidth = 22MHz
#*.satellite*.wlan[0].radio.transmitter.power = 10dBW
#*.satellite*.wlan[0].radio.transmitter.preambleDuration = 10us

####### Attacker DDoS Packets ###############
*.attacker*.numApps = 1
*.attacker*.app[0].typename = "UdpBasicApp"
*.attacker*.app[0].destAddresses = "groundStation"
*.attacker*.app[0].destPort = 5000
*.attacker*.app[0].messageLength = 1000B
*.attacker*.app[0].sendInterval = exponential(5ms)
*.attacker*.app[0].packetName = "DDoS-Packet"
*.attacker[*].app[0].startTime = 10s

############ Different Start Times For Attackers #############
#*.attacker[0].app[0].startTime = 0.02s
#*.attacker[1].app[0].startTime = 0.03s
#*.attacker[2].app[0].startTime = 0.04s
#*.attacker[3].app[0].startTime = 0.05s
#*.attacker[4].app[0].startTime = 0.06s
#*.attacker[5].app[0].startTime = 0.07s
#*.attacker[6].app[0].startTime = 0.08s
#*.attacker[7].app[0].startTime = 0.09s
#*.attacker[8].app[0].startTime = 0.10s
#*.attacker[9].app[0].startTime = 0.11s
#*.attacker[10].app[0].startTime = 0.12s

*.groundStation.numApps = 1
*.groundStation.app[0].typename = "UdpSink"
*.groundStation.app[0].localPort = 5000

######## Satellite Mobility ########
#*.satellite*.mobility.typename = "StationaryMobility"
#*.satellite*.mobility.initFromDisplayString = false
#*.satellite*.mobility.initialX = 350m   # Set a valid X coordinate
#*.satellite*.mobility.initialY = 350m   # Set a valid Y coordinate
#*.satellite*.mobility.initialZ = 0m 

*.satellite*.mobility.typename = "CircleMobility"
*.satellite*.mobility.radius = uniform(7000000m, 7050000m)
*.satellite*.mobility.angularSpeed = uniform(0.065deg/s, 0.07deg/s)
*.satellite*.mobility.speed = 100mps
*.satellite*.mobility.centerX = 250m
*.satellite*.mobility.centerY = 250m
*.satellite*.mobility.centerZ = 0m
*.satellite*.mobility.cx = 250m
*.satellite*.mobility.cy = 250m
*.satellite*.mobility.cz = 0m
*.satellite*.mobility.r = 700m

#**.wlan[0].typename = "AckingWirelessInterface"
#**.wlan[0].mac.useAck = false
**.wlan[0].mac.fullDuplex = false
*.groundStation.wlan[0].radio.transmitter.communicationRange = 5000m
*.satellite*.wlan[0].radio.transmitter.communicationRange = 5000m
*.attacker*.wlan[0].radio.transmitter.communicationRange = 500m

**.wlan[0].radio.receiver.ignoreInterference = true
**.wlan[0].mac.headerLength = 23B

####### VISUALIZING ###################
#**.wlan[0].radio.displayCommunicationRange = true
*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.groundStation.wlan[0].radio.displayCommunicationRange = true

# WLAN Configs
**.wlan[0].radio.typename = "Ieee80211ScalarRadio"
**.wlan[0].radio.centerFrequency = 2GHz
**.wlan[0].radio.bandwidth = 22MHz
**.wlan[0].radio.transmitter.power = 100dBW
**.wlan[0].radio.transmitter.preambleDuration = 10us
**.wlan[0].radio.transmitter.headerLength = 8B
**.wlan[0].radio.receiver.sensitivity = -85dBm
**.wlan[0].radio.receiver.energyDetection = -85dBm
**.wlan[0].radio.receiver.snirThreshold = 4dB
**.wlan[0].typename = "Ieee80211Interface"
**.radio.transmitter.detectionRange = 800m
#**.wlan[0].mac.typename = "CsmaCaMac"
**.wlan[*].mac.typename = "Ieee80211Mac"
**.wlan[*].mgmt.typename = "Ieee80211MgmtAdhoc"
#*.attacker*.wlan[*].mgmt.typename = "Ieee80211MgmtApSimplified"
#*.groundStation.wlan[*].mgmt.typename = "Ieee80211MgmtSta"
# Configure the MIB module for IEEE 802.11 MAC
**.wlan[*].mac.mibModule.typename = "Ieee80211Mib"
#**.wlan[*].mac.typename = "BMac"
**.wlan[*].mac.headerLength = 1B
**.wlan[*].mac.slotDuration = 0.025s
#**.wlan[0].mac.ackTimeout = 300us
**.wlan[0].queue.typename = "DropTailQueue"
**.wlan[0].queue.packetCapacity = 10
**.wlan[*].agent.typename = "" 
**.forwarding = true
**.bitrate = 1Mbps
*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false
**.ipv4.routingTable.netmaskRoutes = ""


**.wlan[0].recordPcap = true
*.groundStation.wlan[*].numPcapRecorders = 1
*.groundStation.wlan[*].pcapRecorder[*].pcapFile = "outputwifi.pcap"
*.groundStation.wlan[*].pcapRecorder[*].alwaysFlush = true
#*.attacker*.wlan[*].numPcapRecorders = 1
# Enable event logging
*.groundStation.numPcapRecorders = 1
*.groundStation.pcapRecorder[*].pcapFile = "output.pcap"
*.groundStation.pcapRecorder[*].moduleNamePatterns = "*"
*.groundStation.pcapRecorder[*].alwaysFlush = true
#*.groundStation.pcapRecorder[*].dumpProtocols = "CsmaCaMac"

*.attacker*.numPcapRecorders = 1
*.attacker*.pcapRecorder[*].pcapFile = "outputAttack.pcap"
*.attacker*.pcapRecorder[*].moduleNamePatterns = "*"